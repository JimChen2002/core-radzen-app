{
  "access": "Authenticated",
  "components": [
    {
      "components": [
        {
          "name": "pageTitle",
          "size": "H1",
          "text": "Events Dashboard",
          "type": "heading"
        },
        {
          "components": [
            {
              "class": "col-md-12",
              "components": [
                {
                  "attributes": [
                    {
                      "name": "@oninput",
                      "value": "@(async(args) => {search = $\"{args.Value}\";await grid0.GoToPage(0);await Load();})"
                    }
                  ],
                  "name": "textbox0",
                  "placeholder": "Search ...",
                  "style": {
                    "display": "block",
                    "marginBottom": "10px",
                    "width": "100%"
                  },
                  "type": "textbox",
                  "value": ""
                },
                {
                  "allowColumnResize": true,
                  "allowFiltering": true,
                  "allowPaging": true,
                  "allowSorting": true,
                  "columnWidth": "",
                  "columns": [
                    {
                      "format": "date-time",
                      "formatString": "{0:d}",
                      "property": "EventDate",
                      "title": "Date",
                      "type": "string"
                    },
                    {
                      "formatString": "{0:t}",
                      "property": "StartTime",
                      "title": "Time"
                    },
                    {
                      "format": "",
                      "property": "TblHospital.HospitalName",
                      "title": "Hospital Name",
                      "type": "string"
                    },
                    {
                      "minWidth": "40px",
                      "template": [
                        {
                          "isPill": true,
                          "name": "badge1",
                          "style": {
                            "backgroundColor": "#b50909"
                          },
                          "text": "Volunteer Speaker Needed",
                          "type": "badge",
                          "visible": "${!(data.TblVolunteerSpeakerRequests?.Any() ?? false)}"
                        }
                      ],
                      "title": "Volunteer Speaker Status",
                      "width": ""
                    },
                    {
                      "format": "",
                      "property": "LeadershipSpeaker",
                      "template": "",
                      "title": "Leadership Speaker",
                      "type": "string",
                      "visible": true
                    },
                    {
                      "format": "",
                      "property": "LeadershipSpeakerRequested",
                      "template": [
                        {
                          "isPill": true,
                          "name": "badge0",
                          "style": {
                            "backgroundColor": "#8c8c8c"
                          },
                          "text": "Requested",
                          "type": "badge",
                          "visible": "${data.LeadershipSpeakerRequested}"
                        }
                      ],
                      "title": "Leadership Speaker Requested",
                      "type": "boolean"
                    },
                    {
                      "filterable": false,
                      "sortable": false,
                      "template": [
                        {
                          "attributes": [
                            {
                              "name": "@onclick:stopPropagation",
                              "value": true
                            }
                          ],
                          "buttonStyle": "danger",
                          "events": {
                            "click": [
                              {
                                "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                "error": [
                                  {
                                    "detail": "Unable to delete TblEvent",
                                    "severity": "error",
                                    "summary": "Error",
                                    "type": "notify"
                                  }
                                ],
                                "name": "CORE.deleteTblEvent",
                                "parameters": [
                                  {
                                    "name": "tblEvent_ID",
                                    "value": "${data.tblEvent_ID}"
                                  }
                                ],
                                "then": [
                                  {
                                    "code": "await grid0.Reload();",
                                    "condition": "result != null",
                                    "type": "execute"
                                  }
                                ],
                                "type": "invoke"
                              }
                            ]
                          },
                          "icon": "delete",
                          "name": "gridDeleteButton",
                          "size": "sm",
                          "style": {
                            "color": "#a9adaf"
                          },
                          "text": "",
                          "type": "button",
                          "variant": "Variant.Text"
                        }
                      ],
                      "textAlign": "center",
                      "visible": "${isAdmin}",
                      "width": "70px"
                    }
                  ],
                  "count": "",
                  "data": "${getTblEventsResult}",
                  "density": "Density.Compact",
                  "events": {
                    "loadData": [],
                    "render": [
                      {
                        "condition": "grid0.Query.Filter != lastFilter",
                        "name": "master",
                        "type": "set",
                        "value": "grid0.View.FirstOrDefault()",
                        "valueType": "CoreRadzen.Models.Core.TblEvent"
                      },
                      {
                        "code": "await grid0.SelectRow(master)",
                        "condition": "grid0.Query.Filter != lastFilter",
                        "then": [],
                        "type": "execute"
                      },
                      {
                        "name": "lastFilter",
                        "type": "set",
                        "value": "grid0.Query.Filter",
                        "valueType": "string"
                      }
                    ],
                    "rowClick": [],
                    "rowDoubleClick": [
                      {
                        "parameters": [
                          {
                            "name": "tblEvent_ID",
                            "value": "${event.Data.tblEvent_ID}"
                          }
                        ],
                        "path": "edit-events",
                        "type": "navigate"
                      }
                    ],
                    "rowSelect": [
                      {
                        "name": "master",
                        "type": "set",
                        "value": "${event}",
                        "valueType": "CoreRadzen.Models.Core.TblEvent"
                      },
                      {
                        "condition": "${event} == null",
                        "name": "TblCoreAttendances",
                        "type": "set",
                        "value": "null",
                        "valueType": "IEnumerable<CoreRadzen.Models.Core.TblCoreAttendance>"
                      },
                      {
                        "condition": "${event} != null",
                        "name": "CORE.getTblCoreAttendances",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "i => i.tblEvent_ID == ${event.tblEvent_ID}"
                          }
                        ],
                        "then": [
                          {
                            "name": "TblCoreAttendances",
                            "type": "set",
                            "value": "${result}",
                            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblCoreAttendance>"
                          }
                        ],
                        "type": "invoke"
                      },
                      {
                        "condition": "${event} != null",
                        "name": "CORE.getTblVolunteerSpeakerRequests",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "i => i.tblEvent_ID == ${event.tblEvent_ID}"
                          }
                        ],
                        "then": [
                          {
                            "name": "TblVolunteerSpeakerRequests",
                            "type": "set",
                            "value": "${result}",
                            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblVolunteerSpeakerRequest>"
                          }
                        ],
                        "type": "invoke"
                      }
                    ]
                  },
                  "filterMode": "advanced",
                  "isLoading": false,
                  "itemType": "CoreRadzen.Models.Core.TblEvent",
                  "keyProperty": "",
                  "name": "grid0",
                  "responsive": true,
                  "title": "",
                  "type": "datagrid"
                },
                {
                  "disabled": "${this.master == null}",
                  "events": {
                    "click": [
                      {
                        "parameters": [
                          {
                            "name": "tblEvent_ID",
                            "type": "integer",
                            "value": "${master.tblEvent_ID}"
                          }
                        ],
                        "path": "add-events",
                        "then": [
                          {
                            "code": "await grid2.Reload();",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "icon": "add_circle_outline",
                  "name": "button0",
                  "style": {
                    "marginBottom": "10px",
                    "marginTop": "10px"
                  },
                  "text": "Add Event",
                  "type": "button"
                },
                {
                  "events": {
                    "click": [
                      {
                        "condition": "${event?.Value == \"csv\"}",
                        "fileName": "Tbl Events",
                        "name": "CORE.getTblEvents",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "${(string.IsNullOrEmpty(grid0.Query.Filter)? \"true\" : grid0.Query.Filter)}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${grid0.Query.OrderBy}"
                          },
                          {
                            "name": "$expand",
                            "value": "TblHospital"
                          },
                          {
                            "name": "$select",
                            "value": "tblEvent_ID,EventDate,StartTime,EndTime,TblHospital.HospitalName as TblHospitalHospitalName,LocationDetails,EventType,EventDescription,EventDetails,SpeakerNeeds,LeadershipSpeakerRequested,LeadershipSpeaker,LeadershipSpeechLength,VolunteerSpeechLength,AudienceTypes,EstimatedAttendees,SocialMediaOrVideoNeeds,IsLegislatorsInvited,IsLegislatorsAttending,IsQuiltRequested,QuiltNumber,QuiltCoordinator,IsVehicleRequested,IsVehicleReserved,VehicleDriver,OnsiteContactName,OnsiteContactPhone,OnsiteContactEmail,IsLocked,PlaceToMeet,AdditionalInformation"
                          }
                        ],
                        "type": "export"
                      },
                      {
                        "condition": "${event == null || event.Value == \"xlsx\"}",
                        "fileName": "Tbl Events",
                        "format": "xlsx",
                        "name": "CORE.getTblEvents",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "${(string.IsNullOrEmpty(grid0.Query.Filter)? \"true\" : grid0.Query.Filter)}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${grid0.Query.OrderBy}"
                          },
                          {
                            "name": "$expand",
                            "value": "TblHospital"
                          },
                          {
                            "name": "$select",
                            "value": "tblEvent_ID,EventDate,StartTime,EndTime,TblHospital.HospitalName as TblHospitalHospitalName,LocationDetails,EventType,EventDescription,EventDetails,SpeakerNeeds,LeadershipSpeakerRequested,LeadershipSpeaker,LeadershipSpeechLength,VolunteerSpeechLength,AudienceTypes,EstimatedAttendees,SocialMediaOrVideoNeeds,IsLegislatorsInvited,IsLegislatorsAttending,IsQuiltRequested,QuiltNumber,QuiltCoordinator,IsVehicleRequested,IsVehicleReserved,VehicleDriver,OnsiteContactName,OnsiteContactPhone,OnsiteContactEmail,IsLocked,PlaceToMeet,AdditionalInformation"
                          }
                        ],
                        "type": "export"
                      }
                    ]
                  },
                  "icon": "get_app",
                  "items": [
                    {
                      "icon": "",
                      "text": "Excel",
                      "value": "xlsx"
                    },
                    {
                      "icon": "",
                      "text": "CSV",
                      "value": "csv"
                    }
                  ],
                  "name": "splitbutton0",
                  "style": {
                    "marginBottom": "10px",
                    "marginLeft": "10px"
                  },
                  "text": "Export",
                  "type": "splitbutton"
                },
                {
                  "components": [
                    {
                      "name": "heading2",
                      "size": "H1",
                      "text": "Volunteer Speakers Requests",
                      "type": "heading"
                    },
                    {
                      "allowFiltering": true,
                      "allowPaging": true,
                      "allowSorting": true,
                      "columns": [
                        {
                          "format": "",
                          "property": "TblSpeaker.Name",
                          "title": "Volunteer Speaker",
                          "type": "string"
                        },
                        {
                          "format": "",
                          "property": "TblSpeaker.PhoneNumber",
                          "title": "Phone Number",
                          "type": "string"
                        },
                        {
                          "format": "",
                          "property": "TblSpeaker.Email",
                          "title": "Email",
                          "type": "string"
                        },
                        {
                          "format": "",
                          "property": "TblSpeaker.Connection",
                          "title": "Connection",
                          "type": "string"
                        },
                        {
                          "format": "",
                          "property": "TblSpeaker.Background",
                          "title": "Background",
                          "type": "string"
                        },
                        {
                          "format": "",
                          "property": "TblSpeaker.AccessibilityRequirements",
                          "title": "Accessibility Requirements",
                          "type": "string"
                        },
                        {
                          "format": "",
                          "property": "TblSpeaker.Quote",
                          "title": "Quote",
                          "type": "string"
                        },
                        {
                          "filterable": false,
                          "sortable": false,
                          "template": [
                            {
                              "attributes": [
                                {
                                  "name": "@onclick:stopPropagation",
                                  "value": true
                                }
                              ],
                              "buttonStyle": "danger",
                              "events": {
                                "click": [
                                  {
                                    "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                    "error": [
                                      {
                                        "detail": "Unable to delete TblEvent",
                                        "severity": "error",
                                        "summary": "Error",
                                        "type": "notify"
                                      }
                                    ],
                                    "name": "CORE.deleteTblVolunteerSpeakerRequest",
                                    "parameters": [
                                      {
                                        "name": "tblVolunteerSpeakerRequests_ID",
                                        "value": "${data.tblVolunteerSpeakerRequests_ID}"
                                      }
                                    ],
                                    "then": [
                                      {
                                        "code": "await grid2.Reload();",
                                        "condition": "result != null",
                                        "type": "execute"
                                      }
                                    ],
                                    "type": "invoke"
                                  }
                                ]
                              },
                              "icon": "delete",
                              "name": "TblVolunteerSpeakerRequestDeleteButton",
                              "size": "sm",
                              "style": {
                                "color": "#a9adaf"
                              },
                              "text": "",
                              "type": "button",
                              "variant": "Variant.Text"
                            }
                          ],
                          "textAlign": "center",
                          "visible": "${isAdmin}",
                          "width": "70px"
                        }
                      ],
                      "data": "${TblVolunteerSpeakerRequests}",
                      "events": {
                        "rowSelect": [
                          {
                            "parameters": [
                              {
                                "name": "tblVolunteerSpeakerRequests_ID",
                                "value": "${event.tblVolunteerSpeakerRequests_ID}"
                              }
                            ],
                            "path": "edit-tbl-volunteer-speaker-request",
                            "then": [
                              {
                                "code": "await grid2.Reload();",
                                "type": "execute"
                              }
                            ],
                            "title": "Edit Speaker Request",
                            "type": "popup"
                          }
                        ]
                      },
                      "filterMode": "advanced",
                      "itemType": "CoreRadzen.Models.Core.TblVolunteerSpeakerRequest",
                      "name": "grid2",
                      "type": "datagrid"
                    },
                    {
                      "disabled": "${this.master == null}",
                      "events": {
                        "click": [
                          {
                            "parameters": [
                              {
                                "name": "tblEvent_ID",
                                "type": "integer",
                                "value": "${master.tblEvent_ID}"
                              }
                            ],
                            "path": "add-tbl-volunteer-speaker-request",
                            "then": [
                              {
                                "code": "await grid2.Reload();",
                                "type": "execute"
                              }
                            ],
                            "title": "Add Speaker Request",
                            "type": "popup"
                          }
                        ]
                      },
                      "icon": "add_circle_outline",
                      "name": "TblVolunteerSpeakerRequestAddButton",
                      "style": {
                        "marginBottom": "10px",
                        "marginTop": "10px"
                      },
                      "text": "Add Speaker Request",
                      "type": "button",
                      "visible": "${isAdmin}"
                    }
                  ],
                  "name": "fieldset0",
                  "text": "Volunteer Speaker Requests",
                  "type": "fieldset"
                },
                {
                  "components": [
                    {
                      "name": "heading1",
                      "size": "H1",
                      "text": "CORE Members Attending",
                      "type": "heading"
                    },
                    {
                      "allowFiltering": true,
                      "allowPaging": true,
                      "allowSorting": true,
                      "columns": [
                        {
                          "property": "tblCOREAttendance_ID",
                          "title": "Tbl CORE Attendance ID",
                          "visible": false
                        },
                        {
                          "filterProperty": "TblEvent.LocationDetails",
                          "groupProperty": "TblEvent.LocationDetails",
                          "property": "tblEvent_ID",
                          "sortProperty": "TblEvent.LocationDetails",
                          "template": "${data.TblEvent?.LocationDetails}",
                          "title": "Tbl Event",
                          "visible": false
                        },
                        {
                          "filterProperty": "TblAdUser.UserName",
                          "groupProperty": "TblAdUser.UserName",
                          "property": "tblADUser_ID",
                          "sortProperty": "TblAdUser.UserName",
                          "template": "${data.TblAdUser?.UserName}",
                          "title": "Username"
                        },
                        {
                          "filterable": false,
                          "sortable": false,
                          "template": [
                            {
                              "attributes": [
                                {
                                  "name": "@onclick:stopPropagation",
                                  "value": true
                                }
                              ],
                              "buttonStyle": "danger",
                              "events": {
                                "click": [
                                  {
                                    "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                    "error": [
                                      {
                                        "detail": "Unable to delete TblEvent",
                                        "severity": "error",
                                        "summary": "Error",
                                        "type": "notify"
                                      }
                                    ],
                                    "name": "CORE.deleteTblCoreAttendance",
                                    "parameters": [
                                      {
                                        "name": "tblCOREAttendance_ID",
                                        "value": "${data.tblCOREAttendance_ID}"
                                      }
                                    ],
                                    "then": [
                                      {
                                        "code": "await grid1.Reload();",
                                        "condition": "result != null",
                                        "type": "execute"
                                      }
                                    ],
                                    "type": "invoke"
                                  }
                                ]
                              },
                              "icon": "delete",
                              "name": "TblCoreAttendanceDeleteButton",
                              "size": "sm",
                              "style": {
                                "color": "#a9adaf"
                              },
                              "text": "",
                              "type": "button",
                              "variant": "Variant.Text"
                            }
                          ],
                          "textAlign": "center",
                          "visible": "${isAdmin}",
                          "width": "70px"
                        }
                      ],
                      "data": "${TblCoreAttendances}",
                      "events": {
                        "rowSelect": [
                          {
                            "parameters": [
                              {
                                "name": "tblCOREAttendance_ID",
                                "value": "${event.tblCOREAttendance_ID}"
                              }
                            ],
                            "path": "edit-tbl-core-attendance",
                            "then": [
                              {
                                "code": "await grid1.Reload();",
                                "type": "execute"
                              }
                            ],
                            "title": "Edit CORE Member",
                            "type": "popup"
                          }
                        ]
                      },
                      "filterMode": "advanced",
                      "itemType": "CoreRadzen.Models.Core.TblCoreAttendance",
                      "name": "grid1",
                      "type": "datagrid"
                    },
                    {
                      "disabled": "${this.master == null}",
                      "events": {
                        "click": [
                          {
                            "parameters": [
                              {
                                "name": "tblEvent_ID",
                                "type": "integer",
                                "value": "${master.tblEvent_ID}"
                              }
                            ],
                            "path": "add-tbl-core-attendance",
                            "then": [
                              {
                                "code": "await grid1.Reload();",
                                "type": "execute"
                              }
                            ],
                            "title": "Add CORE Member",
                            "type": "popup"
                          }
                        ]
                      },
                      "icon": "add_circle_outline",
                      "name": "TblCoreAttendanceAddButton",
                      "style": {
                        "marginBottom": "10px",
                        "marginTop": "10px"
                      },
                      "text": "Add CORE Member",
                      "type": "button",
                      "visible": "${isAdmin}"
                    }
                  ],
                  "name": "fieldset1",
                  "text": "CORE Members Attending",
                  "type": "fieldset"
                }
              ],
              "type": "col"
            }
          ],
          "type": "row"
        }
      ],
      "container": "main",
      "type": "content"
    }
  ],
  "events": {
    "load": [
      {
        "condition": "string.IsNullOrEmpty(search)",
        "name": "search",
        "type": "set",
        "value": "\"\"",
        "valueType": "string"
      },
      {
        "name": "CORE.getTblEvents",
        "parameters": [
          {
            "name": "$filter",
            "operator": "or",
            "value": [
              {
                "operation": "contains",
                "property": "LocationDetails",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EventType",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EventDescription",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EventDetails",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "SpeakerNeeds",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "LeadershipSpeaker",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "AudienceTypes",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EstimatedAttendees",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "SocialMediaOrVideoNeeds",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "QuiltNumber",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "QuiltCoordinator",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "VehicleDriver",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "OnsiteContactName",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "OnsiteContactPhone",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "OnsiteContactEmail",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "PlaceToMeet",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "AdditionalInformation",
                "type": "string",
                "value": "\"${search}\""
              }
            ]
          }
        ],
        "then": [
          {
            "name": "getTblEventsResult",
            "type": "set",
            "value": "${result}",
            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblEvent>"
          }
        ],
        "type": "invoke"
      },
      {
        "name": "CORE.getTblVolunteerSpeakerRequests",
        "parameters": [
          {
            "name": "$expand",
            "value": "TblAdUser,TblHospital,TblEvent,TblSpeaker"
          }
        ],
        "then": [
          {
            "name": "getTblVolunteerSpeakerRequestsResult",
            "type": "set",
            "value": "${result}",
            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblVolunteerSpeakerRequest>"
          }
        ],
        "type": "invoke"
      },
      {
        "name": "CORE.getTblAdminUsers",
        "parameters": [
          {
            "name": "$filter",
            "value": "i => string.Equals(i.UserName, \"${Security.User?.Name}\")"
          }
        ],
        "then": [
          {
            "name": "isAdmin",
            "type": "set",
            "value": "${result}.Count() > 0",
            "valueType": "bool"
          }
        ],
        "type": "invoke"
      }
    ]
  },
  "layout": "Main",
  "name": "Events"
}