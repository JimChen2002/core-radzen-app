{
  "access": "Authenticated",
  "components": [
    {
      "components": [
        {
          "name": "pageTitle",
          "size": "H1",
          "text": "TblEvents",
          "type": "heading"
        },
        {
          "components": [
            {
              "class": "col-md-12",
              "components": [
                {
                  "events": {
                    "click": [
                      {
                        "path": "add-events",
                        "type": "navigate"
                      }
                    ]
                  },
                  "icon": "add_circle_outline",
                  "name": "button0",
                  "style": {
                    "marginBottom": "10px"
                  },
                  "text": "Add",
                  "type": "button"
                },
                {
                  "events": {
                    "click": [
                      {
                        "condition": "${event?.Value == \"csv\"}",
                        "fileName": "Tbl Events",
                        "name": "CORE.getTblEvents",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "${(string.IsNullOrEmpty(grid0.Query.Filter)? \"true\" : grid0.Query.Filter)}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${grid0.Query.OrderBy}"
                          },
                          {
                            "name": "$expand",
                            "value": "TblHospital"
                          },
                          {
                            "name": "$select",
                            "value": "tblEvent_ID,EventDate,StartTime,EndTime,TblHospital.HospitalName as TblHospitalHospitalName,LocationDetails,EventType,EventDescription,EventDetails,SpeakerNeeds,LeadershipSpeakerRequested,LeadershipSpeaker,LeadershipSpeechLength,VolunteerSpeechLength,AudienceTypes,EstimatedAttendees,SocialMediaOrVideoNeeds,IsLegislatorsInvited,IsLegislatorsAttending,IsQuiltRequested,QuiltNumber,QuiltCoordinator,IsVehicleRequested,IsVehicleReserved,VehicleDriver,OnsiteContactName,OnsiteContactPhone,OnsiteContactEmail,IsLocked,PlaceToMeet,AdditionalInformation"
                          }
                        ],
                        "type": "export"
                      },
                      {
                        "condition": "${event == null || event.Value == \"xlsx\"}",
                        "fileName": "Tbl Events",
                        "format": "xlsx",
                        "name": "CORE.getTblEvents",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "${(string.IsNullOrEmpty(grid0.Query.Filter)? \"true\" : grid0.Query.Filter)}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${grid0.Query.OrderBy}"
                          },
                          {
                            "name": "$expand",
                            "value": "TblHospital"
                          },
                          {
                            "name": "$select",
                            "value": "tblEvent_ID,EventDate,StartTime,EndTime,TblHospital.HospitalName as TblHospitalHospitalName,LocationDetails,EventType,EventDescription,EventDetails,SpeakerNeeds,LeadershipSpeakerRequested,LeadershipSpeaker,LeadershipSpeechLength,VolunteerSpeechLength,AudienceTypes,EstimatedAttendees,SocialMediaOrVideoNeeds,IsLegislatorsInvited,IsLegislatorsAttending,IsQuiltRequested,QuiltNumber,QuiltCoordinator,IsVehicleRequested,IsVehicleReserved,VehicleDriver,OnsiteContactName,OnsiteContactPhone,OnsiteContactEmail,IsLocked,PlaceToMeet,AdditionalInformation"
                          }
                        ],
                        "type": "export"
                      }
                    ]
                  },
                  "icon": "get_app",
                  "items": [
                    {
                      "icon": "",
                      "text": "Excel",
                      "value": "xlsx"
                    },
                    {
                      "icon": "",
                      "text": "CSV",
                      "value": "csv"
                    }
                  ],
                  "name": "splitbutton0",
                  "style": {
                    "marginBottom": "10px",
                    "marginLeft": "10px"
                  },
                  "text": "Export",
                  "type": "splitbutton"
                },
                {
                  "attributes": [
                    {
                      "name": "@oninput",
                      "value": "@(async(args) => {search = $\"{args.Value}\";await grid0.GoToPage(0);await Load();})"
                    }
                  ],
                  "name": "textbox0",
                  "placeholder": "Search ...",
                  "style": {
                    "display": "block",
                    "marginBottom": "10px",
                    "width": "100%"
                  },
                  "type": "textbox",
                  "value": ""
                },
                {
                  "allowFiltering": true,
                  "allowPaging": true,
                  "allowSorting": true,
                  "columns": [
                    {
                      "property": "tblEvent_ID",
                      "title": "Tbl Event ID"
                    },
                    {
                      "formatString": "{0:d}",
                      "property": "EventDate",
                      "title": "Event Date"
                    },
                    {
                      "formatString": "{0:d}",
                      "property": "StartTime",
                      "title": "Start Time"
                    },
                    {
                      "formatString": "{0:d}",
                      "property": "EndTime",
                      "title": "End Time"
                    },
                    {
                      "filterProperty": "TblHospital.HospitalName",
                      "groupProperty": "TblHospital.HospitalName",
                      "property": "HospitalID",
                      "sortProperty": "TblHospital.HospitalName",
                      "template": "${data.TblHospital?.HospitalName}",
                      "title": "Tbl Hospital"
                    },
                    {
                      "property": "LocationDetails",
                      "title": "Location Details"
                    },
                    {
                      "property": "EventType",
                      "title": "Event Type"
                    },
                    {
                      "property": "EventDescription",
                      "title": "Event Description"
                    },
                    {
                      "property": "EventDetails",
                      "title": "Event Details"
                    },
                    {
                      "property": "SpeakerNeeds",
                      "title": "Speaker Needs"
                    },
                    {
                      "property": "LeadershipSpeakerRequested",
                      "title": "Leadership Speaker Requested"
                    },
                    {
                      "property": "LeadershipSpeaker",
                      "title": "Leadership Speaker"
                    },
                    {
                      "property": "LeadershipSpeechLength",
                      "title": "Leadership Speech Length"
                    },
                    {
                      "property": "VolunteerSpeechLength",
                      "title": "Volunteer Speech Length"
                    },
                    {
                      "property": "AudienceTypes",
                      "title": "Audience Types"
                    },
                    {
                      "property": "EstimatedAttendees",
                      "title": "Estimated Attendees"
                    },
                    {
                      "property": "SocialMediaOrVideoNeeds",
                      "title": "Social Media Or Video Needs"
                    },
                    {
                      "property": "IsLegislatorsInvited",
                      "title": "Is Legislators Invited"
                    },
                    {
                      "property": "IsLegislatorsAttending",
                      "title": "Is Legislators Attending"
                    },
                    {
                      "property": "IsQuiltRequested",
                      "title": "Is Quilt Requested"
                    },
                    {
                      "property": "QuiltNumber",
                      "title": "Quilt Number"
                    },
                    {
                      "property": "QuiltCoordinator",
                      "title": "Quilt Coordinator"
                    },
                    {
                      "property": "IsVehicleRequested",
                      "title": "Is Vehicle Requested"
                    },
                    {
                      "property": "IsVehicleReserved",
                      "title": "Is Vehicle Reserved"
                    },
                    {
                      "property": "VehicleDriver",
                      "title": "Vehicle Driver"
                    },
                    {
                      "property": "OnsiteContactName",
                      "title": "Onsite Contact Name"
                    },
                    {
                      "property": "OnsiteContactPhone",
                      "title": "Onsite Contact Phone"
                    },
                    {
                      "property": "OnsiteContactEmail",
                      "title": "Onsite Contact Email"
                    },
                    {
                      "property": "IsLocked",
                      "title": "Is Locked"
                    },
                    {
                      "property": "PlaceToMeet",
                      "title": "Place To Meet"
                    },
                    {
                      "property": "AdditionalInformation",
                      "title": "Additional Information"
                    },
                    {
                      "filterable": false,
                      "sortable": false,
                      "template": [
                        {
                          "attributes": [
                            {
                              "name": "@onclick:stopPropagation",
                              "value": true
                            }
                          ],
                          "buttonStyle": "danger",
                          "events": {
                            "click": [
                              {
                                "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                "error": [
                                  {
                                    "detail": "Unable to delete TblEvent",
                                    "severity": "error",
                                    "summary": "Error",
                                    "type": "notify"
                                  }
                                ],
                                "name": "CORE.deleteTblEvent",
                                "parameters": [
                                  {
                                    "name": "tblEvent_ID",
                                    "value": "${data.tblEvent_ID}"
                                  }
                                ],
                                "then": [
                                  {
                                    "code": "await grid0.Reload();",
                                    "condition": "result != null",
                                    "type": "execute"
                                  }
                                ],
                                "type": "invoke"
                              }
                            ]
                          },
                          "icon": "close",
                          "name": "gridDeleteButton",
                          "size": "sm",
                          "text": "",
                          "type": "button"
                        }
                      ],
                      "textAlign": "center",
                      "width": "70px"
                    }
                  ],
                  "data": "${getTblEventsResult}",
                  "events": {
                    "loadData": [],
                    "render": [
                      {
                        "condition": "grid0.Query.Filter != lastFilter",
                        "name": "master",
                        "type": "set",
                        "value": "grid0.View.FirstOrDefault()",
                        "valueType": "CoreRadzen.Models.Core.TblEvent"
                      },
                      {
                        "code": "await grid0.SelectRow(master)",
                        "condition": "grid0.Query.Filter != lastFilter",
                        "then": [],
                        "type": "execute"
                      },
                      {
                        "name": "lastFilter",
                        "type": "set",
                        "value": "grid0.Query.Filter",
                        "valueType": "string"
                      }
                    ],
                    "rowDoubleClick": [
                      {
                        "parameters": [
                          {
                            "name": "tblEvent_ID",
                            "value": "${event.Data.tblEvent_ID}"
                          }
                        ],
                        "path": "edit-events",
                        "type": "navigate"
                      }
                    ],
                    "rowSelect": [
                      {
                        "name": "master",
                        "type": "set",
                        "value": "${event}",
                        "valueType": "CoreRadzen.Models.Core.TblEvent"
                      },
                      {
                        "condition": "${event} == null",
                        "name": "TblCoreAttendances",
                        "type": "set",
                        "value": "null",
                        "valueType": "IEnumerable<CoreRadzen.Models.Core.TblCoreAttendance>"
                      },
                      {
                        "condition": "${event} != null",
                        "name": "CORE.getTblCoreAttendances",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "i => i.tblEvent_ID == ${event.tblEvent_ID}"
                          }
                        ],
                        "then": [
                          {
                            "name": "TblCoreAttendances",
                            "type": "set",
                            "value": "${result}",
                            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblCoreAttendance>"
                          }
                        ],
                        "type": "invoke"
                      },
                      {
                        "condition": "${event} != null",
                        "name": "CORE.getTblVolunteerSpeakerRequests",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "i => i.tblEvent_ID == ${event.tblEvent_ID}"
                          }
                        ],
                        "then": [
                          {
                            "name": "TblVolunteerSpeakerRequests",
                            "type": "set",
                            "value": "${result}",
                            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblVolunteerSpeakerRequest>"
                          }
                        ],
                        "type": "invoke"
                      }
                    ]
                  },
                  "filterMode": "advanced",
                  "itemType": "CoreRadzen.Models.Core.TblEvent",
                  "name": "grid0",
                  "title": "",
                  "type": "datagrid"
                },
                {
                  "name": "heading1",
                  "size": "H1",
                  "text": "TblCoreAttendances",
                  "type": "heading"
                },
                {
                  "disabled": "${this.master == null}",
                  "events": {
                    "click": [
                      {
                        "parameters": [
                          {
                            "name": "tblEvent_ID",
                            "type": "integer",
                            "value": "${master.tblEvent_ID}"
                          }
                        ],
                        "path": "add-tbl-core-attendance",
                        "then": [
                          {
                            "code": "await grid1.Reload();",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "icon": "add_circle_outline",
                  "name": "TblCoreAttendanceAddButton",
                  "style": {
                    "marginBottom": "10px"
                  },
                  "text": "Add",
                  "type": "button"
                },
                {
                  "allowFiltering": true,
                  "allowPaging": true,
                  "allowSorting": true,
                  "columns": [
                    {
                      "property": "tblCOREAttendance_ID",
                      "title": "Tbl CORE Attendance ID"
                    },
                    {
                      "filterProperty": "TblEvent.LocationDetails",
                      "groupProperty": "TblEvent.LocationDetails",
                      "property": "tblEvent_ID",
                      "sortProperty": "TblEvent.LocationDetails",
                      "template": "${data.TblEvent?.LocationDetails}",
                      "title": "Tbl Event"
                    },
                    {
                      "filterProperty": "TblAdUser.UserName",
                      "groupProperty": "TblAdUser.UserName",
                      "property": "tblADUser_ID",
                      "sortProperty": "TblAdUser.UserName",
                      "template": "${data.TblAdUser?.UserName}",
                      "title": "Tbl Ad User"
                    },
                    {
                      "filterable": false,
                      "sortable": false,
                      "template": [
                        {
                          "attributes": [
                            {
                              "name": "@onclick:stopPropagation",
                              "value": true
                            }
                          ],
                          "buttonStyle": "danger",
                          "events": {
                            "click": [
                              {
                                "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                "error": [
                                  {
                                    "detail": "Unable to delete TblEvent",
                                    "severity": "error",
                                    "summary": "Error",
                                    "type": "notify"
                                  }
                                ],
                                "name": "CORE.deleteTblCoreAttendance",
                                "parameters": [
                                  {
                                    "name": "tblCOREAttendance_ID",
                                    "value": "${data.tblCOREAttendance_ID}"
                                  }
                                ],
                                "then": [
                                  {
                                    "code": "await grid1.Reload();",
                                    "condition": "result != null",
                                    "type": "execute"
                                  }
                                ],
                                "type": "invoke"
                              }
                            ]
                          },
                          "icon": "close",
                          "name": "TblCoreAttendanceDeleteButton",
                          "size": "sm",
                          "text": "",
                          "type": "button"
                        }
                      ],
                      "textAlign": "center",
                      "width": "70px"
                    }
                  ],
                  "data": "${TblCoreAttendances}",
                  "events": {
                    "rowSelect": [
                      {
                        "parameters": [
                          {
                            "name": "tblCOREAttendance_ID",
                            "value": "${event.tblCOREAttendance_ID}"
                          }
                        ],
                        "path": "edit-tbl-core-attendance",
                        "then": [
                          {
                            "code": "await grid1.Reload();",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "filterMode": "advanced",
                  "itemType": "CoreRadzen.Models.Core.TblCoreAttendance",
                  "name": "grid1",
                  "type": "datagrid"
                },
                {
                  "name": "heading2",
                  "size": "H1",
                  "text": "TblVolunteerSpeakerRequests",
                  "type": "heading"
                },
                {
                  "disabled": "${this.master == null}",
                  "events": {
                    "click": [
                      {
                        "parameters": [
                          {
                            "name": "tblEvent_ID",
                            "type": "integer",
                            "value": "${master.tblEvent_ID}"
                          }
                        ],
                        "path": "add-tbl-volunteer-speaker-request",
                        "then": [
                          {
                            "code": "await grid2.Reload();",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "icon": "add_circle_outline",
                  "name": "TblVolunteerSpeakerRequestAddButton",
                  "style": {
                    "marginBottom": "10px"
                  },
                  "text": "Add",
                  "type": "button"
                },
                {
                  "allowFiltering": true,
                  "allowPaging": true,
                  "allowSorting": true,
                  "columns": [
                    {
                      "property": "tblVolunteerSpeakerRequests_ID",
                      "title": "Tbl Volunteer Speaker Requests ID"
                    },
                    {
                      "filterProperty": "TblEvent.LocationDetails",
                      "groupProperty": "TblEvent.LocationDetails",
                      "property": "tblEvent_ID",
                      "sortProperty": "TblEvent.LocationDetails",
                      "template": "${data.TblEvent?.LocationDetails}",
                      "title": "Tbl Event"
                    },
                    {
                      "filterProperty": "TblSpeaker.Name",
                      "groupProperty": "TblSpeaker.Name",
                      "property": "tblSpeaker_ID",
                      "sortProperty": "TblSpeaker.Name",
                      "template": "${data.TblSpeaker?.Name}",
                      "title": "Tbl Speaker"
                    },
                    {
                      "filterable": false,
                      "sortable": false,
                      "template": [
                        {
                          "attributes": [
                            {
                              "name": "@onclick:stopPropagation",
                              "value": true
                            }
                          ],
                          "buttonStyle": "danger",
                          "events": {
                            "click": [
                              {
                                "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                "error": [
                                  {
                                    "detail": "Unable to delete TblEvent",
                                    "severity": "error",
                                    "summary": "Error",
                                    "type": "notify"
                                  }
                                ],
                                "name": "CORE.deleteTblVolunteerSpeakerRequest",
                                "parameters": [
                                  {
                                    "name": "tblVolunteerSpeakerRequests_ID",
                                    "value": "${data.tblVolunteerSpeakerRequests_ID}"
                                  }
                                ],
                                "then": [
                                  {
                                    "code": "await grid2.Reload();",
                                    "condition": "result != null",
                                    "type": "execute"
                                  }
                                ],
                                "type": "invoke"
                              }
                            ]
                          },
                          "icon": "close",
                          "name": "TblVolunteerSpeakerRequestDeleteButton",
                          "size": "sm",
                          "text": "",
                          "type": "button"
                        }
                      ],
                      "textAlign": "center",
                      "width": "70px"
                    }
                  ],
                  "data": "${TblVolunteerSpeakerRequests}",
                  "events": {
                    "rowSelect": [
                      {
                        "parameters": [
                          {
                            "name": "tblVolunteerSpeakerRequests_ID",
                            "value": "${event.tblVolunteerSpeakerRequests_ID}"
                          }
                        ],
                        "path": "edit-tbl-volunteer-speaker-request",
                        "then": [
                          {
                            "code": "await grid2.Reload();",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "filterMode": "advanced",
                  "itemType": "CoreRadzen.Models.Core.TblVolunteerSpeakerRequest",
                  "name": "grid2",
                  "type": "datagrid"
                }
              ],
              "type": "col"
            }
          ],
          "type": "row"
        }
      ],
      "container": "main",
      "type": "content"
    }
  ],
  "events": {
    "load": [
      {
        "condition": "string.IsNullOrEmpty(search)",
        "name": "search",
        "type": "set",
        "value": "\"\"",
        "valueType": "string"
      },
      {
        "name": "CORE.getTblEvents",
        "parameters": [
          {
            "name": "$filter",
            "operator": "or",
            "value": [
              {
                "operation": "contains",
                "property": "LocationDetails",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EventType",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EventDescription",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EventDetails",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "SpeakerNeeds",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "LeadershipSpeaker",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "AudienceTypes",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "EstimatedAttendees",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "SocialMediaOrVideoNeeds",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "QuiltNumber",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "QuiltCoordinator",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "VehicleDriver",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "OnsiteContactName",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "OnsiteContactPhone",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "OnsiteContactEmail",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "PlaceToMeet",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "AdditionalInformation",
                "type": "string",
                "value": "\"${search}\""
              }
            ]
          }
        ],
        "then": [
          {
            "name": "getTblEventsResult",
            "type": "set",
            "value": "${result}",
            "valueType": "IEnumerable<CoreRadzen.Models.Core.TblEvent>"
          }
        ],
        "type": "invoke"
      }
    ]
  },
  "layout": "Main",
  "name": "TblEvents"
}